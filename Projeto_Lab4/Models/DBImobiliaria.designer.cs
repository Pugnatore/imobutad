#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Projeto_Lab4.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBImobiliaria")]
	public partial class DBImobiliariaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdministrador(Administrador instance);
    partial void UpdateAdministrador(Administrador instance);
    partial void DeleteAdministrador(Administrador instance);
    partial void InsertAluga(Aluga instance);
    partial void UpdateAluga(Aluga instance);
    partial void DeleteAluga(Aluga instance);
    partial void InsertBloqueiaInqulino(BloqueiaInqulino instance);
    partial void UpdateBloqueiaInqulino(BloqueiaInqulino instance);
    partial void DeleteBloqueiaInqulino(BloqueiaInqulino instance);
    partial void InsertBloqueiaProprietario(BloqueiaProprietario instance);
    partial void UpdateBloqueiaProprietario(BloqueiaProprietario instance);
    partial void DeleteBloqueiaProprietario(BloqueiaProprietario instance);
    partial void InsertComenta(Comenta instance);
    partial void UpdateComenta(Comenta instance);
    partial void DeleteComenta(Comenta instance);
    partial void InsertCompra(Compra instance);
    partial void UpdateCompra(Compra instance);
    partial void DeleteCompra(Compra instance);
    partial void InsertConcelho(Concelho instance);
    partial void UpdateConcelho(Concelho instance);
    partial void DeleteConcelho(Concelho instance);
    partial void InsertDenuncia(Denuncia instance);
    partial void UpdateDenuncia(Denuncia instance);
    partial void DeleteDenuncia(Denuncia instance);
    partial void InsertDenunciaProp(DenunciaProp instance);
    partial void UpdateDenunciaProp(DenunciaProp instance);
    partial void DeleteDenunciaProp(DenunciaProp instance);
    partial void InsertDistrito(Distrito instance);
    partial void UpdateDistrito(Distrito instance);
    partial void DeleteDistrito(Distrito instance);
    partial void InsertEncontra_se(Encontra_se instance);
    partial void UpdateEncontra_se(Encontra_se instance);
    partial void DeleteEncontra_se(Encontra_se instance);
    partial void InsertFoto(Foto instance);
    partial void UpdateFoto(Foto instance);
    partial void DeleteFoto(Foto instance);
    partial void InsertImovel(Imovel instance);
    partial void UpdateImovel(Imovel instance);
    partial void DeleteImovel(Imovel instance);
    partial void InsertInquilino(Inquilino instance);
    partial void UpdateInquilino(Inquilino instance);
    partial void DeleteInquilino(Inquilino instance);
    partial void InsertPossuiFoto(PossuiFoto instance);
    partial void UpdatePossuiFoto(PossuiFoto instance);
    partial void DeletePossuiFoto(PossuiFoto instance);
    partial void InsertPossuiImovel(PossuiImovel instance);
    partial void UpdatePossuiImovel(PossuiImovel instance);
    partial void DeletePossuiImovel(PossuiImovel instance);
    partial void InsertProprietario(Proprietario instance);
    partial void UpdateProprietario(Proprietario instance);
    partial void DeleteProprietario(Proprietario instance);
    partial void InsertSitua_se(Situa_se instance);
    partial void UpdateSitua_se(Situa_se instance);
    partial void DeleteSitua_se(Situa_se instance);
    #endregion
		
		public DBImobiliariaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DBImobiliariaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBImobiliariaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBImobiliariaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBImobiliariaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBImobiliariaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Administrador> Administradors
		{
			get
			{
				return this.GetTable<Administrador>();
			}
		}
		
		public System.Data.Linq.Table<Aluga> Alugas
		{
			get
			{
				return this.GetTable<Aluga>();
			}
		}
		
		public System.Data.Linq.Table<BloqueiaInqulino> BloqueiaInqulinos
		{
			get
			{
				return this.GetTable<BloqueiaInqulino>();
			}
		}
		
		public System.Data.Linq.Table<BloqueiaProprietario> BloqueiaProprietarios
		{
			get
			{
				return this.GetTable<BloqueiaProprietario>();
			}
		}
		
		public System.Data.Linq.Table<Comenta> Comentas
		{
			get
			{
				return this.GetTable<Comenta>();
			}
		}
		
		public System.Data.Linq.Table<Compra> Compras
		{
			get
			{
				return this.GetTable<Compra>();
			}
		}
		
		public System.Data.Linq.Table<Concelho> Concelhos
		{
			get
			{
				return this.GetTable<Concelho>();
			}
		}
		
		public System.Data.Linq.Table<Denuncia> Denuncias
		{
			get
			{
				return this.GetTable<Denuncia>();
			}
		}
		
		public System.Data.Linq.Table<DenunciaProp> DenunciaProps
		{
			get
			{
				return this.GetTable<DenunciaProp>();
			}
		}
		
		public System.Data.Linq.Table<Distrito> Distritos
		{
			get
			{
				return this.GetTable<Distrito>();
			}
		}
		
		public System.Data.Linq.Table<Encontra_se> Encontra_ses
		{
			get
			{
				return this.GetTable<Encontra_se>();
			}
		}
		
		public System.Data.Linq.Table<Foto> Fotos
		{
			get
			{
				return this.GetTable<Foto>();
			}
		}
		
		public System.Data.Linq.Table<Imovel> Imovels
		{
			get
			{
				return this.GetTable<Imovel>();
			}
		}
		
		public System.Data.Linq.Table<Inquilino> Inquilinos
		{
			get
			{
				return this.GetTable<Inquilino>();
			}
		}
		
		public System.Data.Linq.Table<PossuiFoto> PossuiFotos
		{
			get
			{
				return this.GetTable<PossuiFoto>();
			}
		}
		
		public System.Data.Linq.Table<PossuiImovel> PossuiImovels
		{
			get
			{
				return this.GetTable<PossuiImovel>();
			}
		}
		
		public System.Data.Linq.Table<Proprietario> Proprietarios
		{
			get
			{
				return this.GetTable<Proprietario>();
			}
		}
		
		public System.Data.Linq.Table<Situa_se> Situa_ses
		{
			get
			{
				return this.GetTable<Situa_se>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Administrador")]
	public partial class Administrador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_Administrador;
		
		private string _Tipo_Utilizador;
		
		private string _Nome;
		
		private string _Username;
		
		private string _Password;
		
		private System.DateTime _Data_Nascimento;
		
		private string _Email;
		
		private int _Cartao_de_Cidadao;
		
		private EntitySet<BloqueiaInqulino> _BloqueiaInqulinos;
		
		private EntitySet<BloqueiaProprietario> _BloqueiaProprietarios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AdministradorChanging(string value);
    partial void OnID_AdministradorChanged();
    partial void OnTipo_UtilizadorChanging(string value);
    partial void OnTipo_UtilizadorChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnData_NascimentoChanging(System.DateTime value);
    partial void OnData_NascimentoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCartao_de_CidadaoChanging(int value);
    partial void OnCartao_de_CidadaoChanged();
    #endregion
		
		public Administrador()
		{
			this._BloqueiaInqulinos = new EntitySet<BloqueiaInqulino>(new Action<BloqueiaInqulino>(this.attach_BloqueiaInqulinos), new Action<BloqueiaInqulino>(this.detach_BloqueiaInqulinos));
			this._BloqueiaProprietarios = new EntitySet<BloqueiaProprietario>(new Action<BloqueiaProprietario>(this.attach_BloqueiaProprietarios), new Action<BloqueiaProprietario>(this.detach_BloqueiaProprietarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Administrador", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Administrador
		{
			get
			{
				return this._ID_Administrador;
			}
			set
			{
				if ((this._ID_Administrador != value))
				{
					this.OnID_AdministradorChanging(value);
					this.SendPropertyChanging();
					this._ID_Administrador = value;
					this.SendPropertyChanged("ID_Administrador");
					this.OnID_AdministradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo_Utilizador", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Tipo_Utilizador
		{
			get
			{
				return this._Tipo_Utilizador;
			}
			set
			{
				if ((this._Tipo_Utilizador != value))
				{
					this.OnTipo_UtilizadorChanging(value);
					this.SendPropertyChanging();
					this._Tipo_Utilizador = value;
					this.SendPropertyChanged("Tipo_Utilizador");
					this.OnTipo_UtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Nascimento", DbType="Date NOT NULL")]
		public System.DateTime Data_Nascimento
		{
			get
			{
				return this._Data_Nascimento;
			}
			set
			{
				if ((this._Data_Nascimento != value))
				{
					this.OnData_NascimentoChanging(value);
					this.SendPropertyChanging();
					this._Data_Nascimento = value;
					this.SendPropertyChanged("Data_Nascimento");
					this.OnData_NascimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cartao_de_Cidadao", DbType="Int NOT NULL")]
		public int Cartao_de_Cidadao
		{
			get
			{
				return this._Cartao_de_Cidadao;
			}
			set
			{
				if ((this._Cartao_de_Cidadao != value))
				{
					this.OnCartao_de_CidadaoChanging(value);
					this.SendPropertyChanging();
					this._Cartao_de_Cidadao = value;
					this.SendPropertyChanged("Cartao_de_Cidadao");
					this.OnCartao_de_CidadaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrador_BloqueiaInqulino", Storage="_BloqueiaInqulinos", ThisKey="ID_Administrador", OtherKey="ID_Administrador")]
		public EntitySet<BloqueiaInqulino> BloqueiaInqulinos
		{
			get
			{
				return this._BloqueiaInqulinos;
			}
			set
			{
				this._BloqueiaInqulinos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrador_BloqueiaProprietario", Storage="_BloqueiaProprietarios", ThisKey="ID_Administrador", OtherKey="ID_Administrador")]
		public EntitySet<BloqueiaProprietario> BloqueiaProprietarios
		{
			get
			{
				return this._BloqueiaProprietarios;
			}
			set
			{
				this._BloqueiaProprietarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BloqueiaInqulinos(BloqueiaInqulino entity)
		{
			this.SendPropertyChanging();
			entity.Administrador = this;
		}
		
		private void detach_BloqueiaInqulinos(BloqueiaInqulino entity)
		{
			this.SendPropertyChanging();
			entity.Administrador = null;
		}
		
		private void attach_BloqueiaProprietarios(BloqueiaProprietario entity)
		{
			this.SendPropertyChanging();
			entity.Administrador = this;
		}
		
		private void detach_BloqueiaProprietarios(BloqueiaProprietario entity)
		{
			this.SendPropertyChanging();
			entity.Administrador = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Aluga")]
	public partial class Aluga : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Data_Aluguer_Inicio;
		
		private int _Valor;
		
		private string _ID_Inquilino;
		
		private string _ID_Proprietario;
		
		private int _ID_Imovel;
		
		private System.DateTime _Data_Aluguer_Final;
		
		private EntityRef<Imovel> _Imovel;
		
		private EntityRef<Inquilino> _Inquilino;
		
		private EntityRef<Proprietario> _Proprietario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnData_Aluguer_InicioChanging(System.DateTime value);
    partial void OnData_Aluguer_InicioChanged();
    partial void OnValorChanging(int value);
    partial void OnValorChanged();
    partial void OnID_InquilinoChanging(string value);
    partial void OnID_InquilinoChanged();
    partial void OnID_ProprietarioChanging(string value);
    partial void OnID_ProprietarioChanged();
    partial void OnID_ImovelChanging(int value);
    partial void OnID_ImovelChanged();
    partial void OnData_Aluguer_FinalChanging(System.DateTime value);
    partial void OnData_Aluguer_FinalChanged();
    #endregion
		
		public Aluga()
		{
			this._Imovel = default(EntityRef<Imovel>);
			this._Inquilino = default(EntityRef<Inquilino>);
			this._Proprietario = default(EntityRef<Proprietario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Aluguer_Inicio", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_Aluguer_Inicio
		{
			get
			{
				return this._Data_Aluguer_Inicio;
			}
			set
			{
				if ((this._Data_Aluguer_Inicio != value))
				{
					this.OnData_Aluguer_InicioChanging(value);
					this.SendPropertyChanging();
					this._Data_Aluguer_Inicio = value;
					this.SendPropertyChanged("Data_Aluguer_Inicio");
					this.OnData_Aluguer_InicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Int NOT NULL")]
		public int Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Inquilino", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Inquilino
		{
			get
			{
				return this._ID_Inquilino;
			}
			set
			{
				if ((this._ID_Inquilino != value))
				{
					if (this._Inquilino.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_InquilinoChanging(value);
					this.SendPropertyChanging();
					this._ID_Inquilino = value;
					this.SendPropertyChanged("ID_Inquilino");
					this.OnID_InquilinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Proprietario", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ID_Proprietario
		{
			get
			{
				return this._ID_Proprietario;
			}
			set
			{
				if ((this._ID_Proprietario != value))
				{
					if (this._Proprietario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProprietarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Proprietario = value;
					this.SendPropertyChanged("ID_Proprietario");
					this.OnID_ProprietarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Imovel", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Imovel
		{
			get
			{
				return this._ID_Imovel;
			}
			set
			{
				if ((this._ID_Imovel != value))
				{
					if (this._Imovel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ImovelChanging(value);
					this.SendPropertyChanging();
					this._ID_Imovel = value;
					this.SendPropertyChanged("ID_Imovel");
					this.OnID_ImovelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Aluguer_Final", DbType="Date NOT NULL")]
		public System.DateTime Data_Aluguer_Final
		{
			get
			{
				return this._Data_Aluguer_Final;
			}
			set
			{
				if ((this._Data_Aluguer_Final != value))
				{
					this.OnData_Aluguer_FinalChanging(value);
					this.SendPropertyChanging();
					this._Data_Aluguer_Final = value;
					this.SendPropertyChanged("Data_Aluguer_Final");
					this.OnData_Aluguer_FinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Aluga", Storage="_Imovel", ThisKey="ID_Imovel", OtherKey="ID_Imovel", IsForeignKey=true)]
		public Imovel Imovel
		{
			get
			{
				return this._Imovel.Entity;
			}
			set
			{
				Imovel previousValue = this._Imovel.Entity;
				if (((previousValue != value) 
							|| (this._Imovel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Imovel.Entity = null;
						previousValue.Alugas.Remove(this);
					}
					this._Imovel.Entity = value;
					if ((value != null))
					{
						value.Alugas.Add(this);
						this._ID_Imovel = value.ID_Imovel;
					}
					else
					{
						this._ID_Imovel = default(int);
					}
					this.SendPropertyChanged("Imovel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inquilino_Aluga", Storage="_Inquilino", ThisKey="ID_Inquilino", OtherKey="ID_Inquilino", IsForeignKey=true)]
		public Inquilino Inquilino
		{
			get
			{
				return this._Inquilino.Entity;
			}
			set
			{
				Inquilino previousValue = this._Inquilino.Entity;
				if (((previousValue != value) 
							|| (this._Inquilino.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inquilino.Entity = null;
						previousValue.Alugas.Remove(this);
					}
					this._Inquilino.Entity = value;
					if ((value != null))
					{
						value.Alugas.Add(this);
						this._ID_Inquilino = value.ID_Inquilino;
					}
					else
					{
						this._ID_Inquilino = default(string);
					}
					this.SendPropertyChanged("Inquilino");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proprietario_Aluga", Storage="_Proprietario", ThisKey="ID_Proprietario", OtherKey="ID_Proprietario", IsForeignKey=true)]
		public Proprietario Proprietario
		{
			get
			{
				return this._Proprietario.Entity;
			}
			set
			{
				Proprietario previousValue = this._Proprietario.Entity;
				if (((previousValue != value) 
							|| (this._Proprietario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proprietario.Entity = null;
						previousValue.Alugas.Remove(this);
					}
					this._Proprietario.Entity = value;
					if ((value != null))
					{
						value.Alugas.Add(this);
						this._ID_Proprietario = value.ID_Proprietario;
					}
					else
					{
						this._ID_Proprietario = default(string);
					}
					this.SendPropertyChanged("Proprietario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BloqueiaInqulino")]
	public partial class BloqueiaInqulino : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Data_de_bloqueio;
		
		private string _ID_Inquilino;
		
		private string _ID_Administrador;
		
		private string _Motivo;
		
		private EntityRef<Administrador> _Administrador;
		
		private EntityRef<Inquilino> _Inquilino;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnData_de_bloqueioChanging(System.DateTime value);
    partial void OnData_de_bloqueioChanged();
    partial void OnID_InquilinoChanging(string value);
    partial void OnID_InquilinoChanged();
    partial void OnID_AdministradorChanging(string value);
    partial void OnID_AdministradorChanged();
    partial void OnMotivoChanging(string value);
    partial void OnMotivoChanged();
    #endregion
		
		public BloqueiaInqulino()
		{
			this._Administrador = default(EntityRef<Administrador>);
			this._Inquilino = default(EntityRef<Inquilino>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_de_bloqueio", DbType="SmallDateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_de_bloqueio
		{
			get
			{
				return this._Data_de_bloqueio;
			}
			set
			{
				if ((this._Data_de_bloqueio != value))
				{
					this.OnData_de_bloqueioChanging(value);
					this.SendPropertyChanging();
					this._Data_de_bloqueio = value;
					this.SendPropertyChanged("Data_de_bloqueio");
					this.OnData_de_bloqueioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Inquilino", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Inquilino
		{
			get
			{
				return this._ID_Inquilino;
			}
			set
			{
				if ((this._ID_Inquilino != value))
				{
					if (this._Inquilino.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_InquilinoChanging(value);
					this.SendPropertyChanging();
					this._ID_Inquilino = value;
					this.SendPropertyChanged("ID_Inquilino");
					this.OnID_InquilinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Administrador", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ID_Administrador
		{
			get
			{
				return this._ID_Administrador;
			}
			set
			{
				if ((this._ID_Administrador != value))
				{
					if (this._Administrador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AdministradorChanging(value);
					this.SendPropertyChanging();
					this._ID_Administrador = value;
					this.SendPropertyChanged("ID_Administrador");
					this.OnID_AdministradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motivo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Motivo
		{
			get
			{
				return this._Motivo;
			}
			set
			{
				if ((this._Motivo != value))
				{
					this.OnMotivoChanging(value);
					this.SendPropertyChanging();
					this._Motivo = value;
					this.SendPropertyChanged("Motivo");
					this.OnMotivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrador_BloqueiaInqulino", Storage="_Administrador", ThisKey="ID_Administrador", OtherKey="ID_Administrador", IsForeignKey=true)]
		public Administrador Administrador
		{
			get
			{
				return this._Administrador.Entity;
			}
			set
			{
				Administrador previousValue = this._Administrador.Entity;
				if (((previousValue != value) 
							|| (this._Administrador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrador.Entity = null;
						previousValue.BloqueiaInqulinos.Remove(this);
					}
					this._Administrador.Entity = value;
					if ((value != null))
					{
						value.BloqueiaInqulinos.Add(this);
						this._ID_Administrador = value.ID_Administrador;
					}
					else
					{
						this._ID_Administrador = default(string);
					}
					this.SendPropertyChanged("Administrador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inquilino_BloqueiaInqulino", Storage="_Inquilino", ThisKey="ID_Inquilino", OtherKey="ID_Inquilino", IsForeignKey=true)]
		public Inquilino Inquilino
		{
			get
			{
				return this._Inquilino.Entity;
			}
			set
			{
				Inquilino previousValue = this._Inquilino.Entity;
				if (((previousValue != value) 
							|| (this._Inquilino.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inquilino.Entity = null;
						previousValue.BloqueiaInqulinos.Remove(this);
					}
					this._Inquilino.Entity = value;
					if ((value != null))
					{
						value.BloqueiaInqulinos.Add(this);
						this._ID_Inquilino = value.ID_Inquilino;
					}
					else
					{
						this._ID_Inquilino = default(string);
					}
					this.SendPropertyChanged("Inquilino");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BloqueiaProprietario")]
	public partial class BloqueiaProprietario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Data_de_bloqueio;
		
		private string _ID_Proprietario;
		
		private string _ID_Administrador;
		
		private string _Motivo;
		
		private EntityRef<Administrador> _Administrador;
		
		private EntityRef<Proprietario> _Proprietario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnData_de_bloqueioChanging(System.DateTime value);
    partial void OnData_de_bloqueioChanged();
    partial void OnID_ProprietarioChanging(string value);
    partial void OnID_ProprietarioChanged();
    partial void OnID_AdministradorChanging(string value);
    partial void OnID_AdministradorChanged();
    partial void OnMotivoChanging(string value);
    partial void OnMotivoChanged();
    #endregion
		
		public BloqueiaProprietario()
		{
			this._Administrador = default(EntityRef<Administrador>);
			this._Proprietario = default(EntityRef<Proprietario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_de_bloqueio", DbType="SmallDateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_de_bloqueio
		{
			get
			{
				return this._Data_de_bloqueio;
			}
			set
			{
				if ((this._Data_de_bloqueio != value))
				{
					this.OnData_de_bloqueioChanging(value);
					this.SendPropertyChanging();
					this._Data_de_bloqueio = value;
					this.SendPropertyChanged("Data_de_bloqueio");
					this.OnData_de_bloqueioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Proprietario", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Proprietario
		{
			get
			{
				return this._ID_Proprietario;
			}
			set
			{
				if ((this._ID_Proprietario != value))
				{
					if (this._Proprietario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProprietarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Proprietario = value;
					this.SendPropertyChanged("ID_Proprietario");
					this.OnID_ProprietarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Administrador", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ID_Administrador
		{
			get
			{
				return this._ID_Administrador;
			}
			set
			{
				if ((this._ID_Administrador != value))
				{
					if (this._Administrador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AdministradorChanging(value);
					this.SendPropertyChanging();
					this._ID_Administrador = value;
					this.SendPropertyChanged("ID_Administrador");
					this.OnID_AdministradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motivo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Motivo
		{
			get
			{
				return this._Motivo;
			}
			set
			{
				if ((this._Motivo != value))
				{
					this.OnMotivoChanging(value);
					this.SendPropertyChanging();
					this._Motivo = value;
					this.SendPropertyChanged("Motivo");
					this.OnMotivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrador_BloqueiaProprietario", Storage="_Administrador", ThisKey="ID_Administrador", OtherKey="ID_Administrador", IsForeignKey=true)]
		public Administrador Administrador
		{
			get
			{
				return this._Administrador.Entity;
			}
			set
			{
				Administrador previousValue = this._Administrador.Entity;
				if (((previousValue != value) 
							|| (this._Administrador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrador.Entity = null;
						previousValue.BloqueiaProprietarios.Remove(this);
					}
					this._Administrador.Entity = value;
					if ((value != null))
					{
						value.BloqueiaProprietarios.Add(this);
						this._ID_Administrador = value.ID_Administrador;
					}
					else
					{
						this._ID_Administrador = default(string);
					}
					this.SendPropertyChanged("Administrador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proprietario_BloqueiaProprietario", Storage="_Proprietario", ThisKey="ID_Proprietario", OtherKey="ID_Proprietario", IsForeignKey=true)]
		public Proprietario Proprietario
		{
			get
			{
				return this._Proprietario.Entity;
			}
			set
			{
				Proprietario previousValue = this._Proprietario.Entity;
				if (((previousValue != value) 
							|| (this._Proprietario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proprietario.Entity = null;
						previousValue.BloqueiaProprietarios.Remove(this);
					}
					this._Proprietario.Entity = value;
					if ((value != null))
					{
						value.BloqueiaProprietarios.Add(this);
						this._ID_Proprietario = value.ID_Proprietario;
					}
					else
					{
						this._ID_Proprietario = default(string);
					}
					this.SendPropertyChanged("Proprietario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comenta")]
	public partial class Comenta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Data_de_comentario;
		
		private string _ID_Inquilino;
		
		private int _ID_Imovel;
		
		private string _Texto;
		
		private EntityRef<Imovel> _Imovel;
		
		private EntityRef<Inquilino> _Inquilino;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnData_de_comentarioChanging(System.DateTime value);
    partial void OnData_de_comentarioChanged();
    partial void OnID_InquilinoChanging(string value);
    partial void OnID_InquilinoChanged();
    partial void OnID_ImovelChanging(int value);
    partial void OnID_ImovelChanged();
    partial void OnTextoChanging(string value);
    partial void OnTextoChanged();
    #endregion
		
		public Comenta()
		{
			this._Imovel = default(EntityRef<Imovel>);
			this._Inquilino = default(EntityRef<Inquilino>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_de_comentario", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_de_comentario
		{
			get
			{
				return this._Data_de_comentario;
			}
			set
			{
				if ((this._Data_de_comentario != value))
				{
					this.OnData_de_comentarioChanging(value);
					this.SendPropertyChanging();
					this._Data_de_comentario = value;
					this.SendPropertyChanged("Data_de_comentario");
					this.OnData_de_comentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Inquilino", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Inquilino
		{
			get
			{
				return this._ID_Inquilino;
			}
			set
			{
				if ((this._ID_Inquilino != value))
				{
					if (this._Inquilino.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_InquilinoChanging(value);
					this.SendPropertyChanging();
					this._ID_Inquilino = value;
					this.SendPropertyChanged("ID_Inquilino");
					this.OnID_InquilinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Imovel", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Imovel
		{
			get
			{
				return this._ID_Imovel;
			}
			set
			{
				if ((this._ID_Imovel != value))
				{
					if (this._Imovel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ImovelChanging(value);
					this.SendPropertyChanging();
					this._ID_Imovel = value;
					this.SendPropertyChanged("ID_Imovel");
					this.OnID_ImovelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Texto", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Texto
		{
			get
			{
				return this._Texto;
			}
			set
			{
				if ((this._Texto != value))
				{
					this.OnTextoChanging(value);
					this.SendPropertyChanging();
					this._Texto = value;
					this.SendPropertyChanged("Texto");
					this.OnTextoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Comenta", Storage="_Imovel", ThisKey="ID_Imovel", OtherKey="ID_Imovel", IsForeignKey=true)]
		public Imovel Imovel
		{
			get
			{
				return this._Imovel.Entity;
			}
			set
			{
				Imovel previousValue = this._Imovel.Entity;
				if (((previousValue != value) 
							|| (this._Imovel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Imovel.Entity = null;
						previousValue.Comentas.Remove(this);
					}
					this._Imovel.Entity = value;
					if ((value != null))
					{
						value.Comentas.Add(this);
						this._ID_Imovel = value.ID_Imovel;
					}
					else
					{
						this._ID_Imovel = default(int);
					}
					this.SendPropertyChanged("Imovel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inquilino_Comenta", Storage="_Inquilino", ThisKey="ID_Inquilino", OtherKey="ID_Inquilino", IsForeignKey=true)]
		public Inquilino Inquilino
		{
			get
			{
				return this._Inquilino.Entity;
			}
			set
			{
				Inquilino previousValue = this._Inquilino.Entity;
				if (((previousValue != value) 
							|| (this._Inquilino.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inquilino.Entity = null;
						previousValue.Comentas.Remove(this);
					}
					this._Inquilino.Entity = value;
					if ((value != null))
					{
						value.Comentas.Add(this);
						this._ID_Inquilino = value.ID_Inquilino;
					}
					else
					{
						this._ID_Inquilino = default(string);
					}
					this.SendPropertyChanged("Inquilino");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Compra")]
	public partial class Compra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Data_de_compra;
		
		private string _ID_Inquilino;
		
		private string _ID_Proprietario;
		
		private int _ID_Imovel;
		
		private int _Valor;
		
		private EntityRef<Imovel> _Imovel;
		
		private EntityRef<Inquilino> _Inquilino;
		
		private EntityRef<Proprietario> _Proprietario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnData_de_compraChanging(System.DateTime value);
    partial void OnData_de_compraChanged();
    partial void OnID_InquilinoChanging(string value);
    partial void OnID_InquilinoChanged();
    partial void OnID_ProprietarioChanging(string value);
    partial void OnID_ProprietarioChanged();
    partial void OnID_ImovelChanging(int value);
    partial void OnID_ImovelChanged();
    partial void OnValorChanging(int value);
    partial void OnValorChanged();
    #endregion
		
		public Compra()
		{
			this._Imovel = default(EntityRef<Imovel>);
			this._Inquilino = default(EntityRef<Inquilino>);
			this._Proprietario = default(EntityRef<Proprietario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_de_compra", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_de_compra
		{
			get
			{
				return this._Data_de_compra;
			}
			set
			{
				if ((this._Data_de_compra != value))
				{
					this.OnData_de_compraChanging(value);
					this.SendPropertyChanging();
					this._Data_de_compra = value;
					this.SendPropertyChanged("Data_de_compra");
					this.OnData_de_compraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Inquilino", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Inquilino
		{
			get
			{
				return this._ID_Inquilino;
			}
			set
			{
				if ((this._ID_Inquilino != value))
				{
					if (this._Inquilino.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_InquilinoChanging(value);
					this.SendPropertyChanging();
					this._ID_Inquilino = value;
					this.SendPropertyChanged("ID_Inquilino");
					this.OnID_InquilinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Proprietario", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ID_Proprietario
		{
			get
			{
				return this._ID_Proprietario;
			}
			set
			{
				if ((this._ID_Proprietario != value))
				{
					if (this._Proprietario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProprietarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Proprietario = value;
					this.SendPropertyChanged("ID_Proprietario");
					this.OnID_ProprietarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Imovel", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Imovel
		{
			get
			{
				return this._ID_Imovel;
			}
			set
			{
				if ((this._ID_Imovel != value))
				{
					if (this._Imovel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ImovelChanging(value);
					this.SendPropertyChanging();
					this._ID_Imovel = value;
					this.SendPropertyChanged("ID_Imovel");
					this.OnID_ImovelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Int NOT NULL")]
		public int Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Compra", Storage="_Imovel", ThisKey="ID_Imovel", OtherKey="ID_Imovel", IsForeignKey=true)]
		public Imovel Imovel
		{
			get
			{
				return this._Imovel.Entity;
			}
			set
			{
				Imovel previousValue = this._Imovel.Entity;
				if (((previousValue != value) 
							|| (this._Imovel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Imovel.Entity = null;
						previousValue.Compras.Remove(this);
					}
					this._Imovel.Entity = value;
					if ((value != null))
					{
						value.Compras.Add(this);
						this._ID_Imovel = value.ID_Imovel;
					}
					else
					{
						this._ID_Imovel = default(int);
					}
					this.SendPropertyChanged("Imovel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inquilino_Compra", Storage="_Inquilino", ThisKey="ID_Inquilino", OtherKey="ID_Inquilino", IsForeignKey=true)]
		public Inquilino Inquilino
		{
			get
			{
				return this._Inquilino.Entity;
			}
			set
			{
				Inquilino previousValue = this._Inquilino.Entity;
				if (((previousValue != value) 
							|| (this._Inquilino.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inquilino.Entity = null;
						previousValue.Compras.Remove(this);
					}
					this._Inquilino.Entity = value;
					if ((value != null))
					{
						value.Compras.Add(this);
						this._ID_Inquilino = value.ID_Inquilino;
					}
					else
					{
						this._ID_Inquilino = default(string);
					}
					this.SendPropertyChanged("Inquilino");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proprietario_Compra", Storage="_Proprietario", ThisKey="ID_Proprietario", OtherKey="ID_Proprietario", IsForeignKey=true)]
		public Proprietario Proprietario
		{
			get
			{
				return this._Proprietario.Entity;
			}
			set
			{
				Proprietario previousValue = this._Proprietario.Entity;
				if (((previousValue != value) 
							|| (this._Proprietario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proprietario.Entity = null;
						previousValue.Compras.Remove(this);
					}
					this._Proprietario.Entity = value;
					if ((value != null))
					{
						value.Compras.Add(this);
						this._ID_Proprietario = value.ID_Proprietario;
					}
					else
					{
						this._ID_Proprietario = default(string);
					}
					this.SendPropertyChanged("Proprietario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Concelho")]
	public partial class Concelho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Concelho;
		
		private string _Nome_concelho;
		
		private EntitySet<Encontra_se> _Encontra_ses;
		
		private EntityRef<Situa_se> _Situa_se;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ConcelhoChanging(int value);
    partial void OnID_ConcelhoChanged();
    partial void OnNome_concelhoChanging(string value);
    partial void OnNome_concelhoChanged();
    #endregion
		
		public Concelho()
		{
			this._Encontra_ses = new EntitySet<Encontra_se>(new Action<Encontra_se>(this.attach_Encontra_ses), new Action<Encontra_se>(this.detach_Encontra_ses));
			this._Situa_se = default(EntityRef<Situa_se>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Concelho", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Concelho
		{
			get
			{
				return this._ID_Concelho;
			}
			set
			{
				if ((this._ID_Concelho != value))
				{
					this.OnID_ConcelhoChanging(value);
					this.SendPropertyChanging();
					this._ID_Concelho = value;
					this.SendPropertyChanged("ID_Concelho");
					this.OnID_ConcelhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome_concelho", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome_concelho
		{
			get
			{
				return this._Nome_concelho;
			}
			set
			{
				if ((this._Nome_concelho != value))
				{
					this.OnNome_concelhoChanging(value);
					this.SendPropertyChanging();
					this._Nome_concelho = value;
					this.SendPropertyChanged("Nome_concelho");
					this.OnNome_concelhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Concelho_Encontra_se", Storage="_Encontra_ses", ThisKey="ID_Concelho", OtherKey="ID_Concelho")]
		public EntitySet<Encontra_se> Encontra_ses
		{
			get
			{
				return this._Encontra_ses;
			}
			set
			{
				this._Encontra_ses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Concelho_Situa_se", Storage="_Situa_se", ThisKey="ID_Concelho", OtherKey="ID_Concelho", IsUnique=true, IsForeignKey=false)]
		public Situa_se Situa_se
		{
			get
			{
				return this._Situa_se.Entity;
			}
			set
			{
				Situa_se previousValue = this._Situa_se.Entity;
				if (((previousValue != value) 
							|| (this._Situa_se.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Situa_se.Entity = null;
						previousValue.Concelho = null;
					}
					this._Situa_se.Entity = value;
					if ((value != null))
					{
						value.Concelho = this;
					}
					this.SendPropertyChanged("Situa_se");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Encontra_ses(Encontra_se entity)
		{
			this.SendPropertyChanging();
			entity.Concelho = this;
		}
		
		private void detach_Encontra_ses(Encontra_se entity)
		{
			this.SendPropertyChanging();
			entity.Concelho = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Denuncia")]
	public partial class Denuncia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Data_denuncia;
		
		private string _ID_Inquilino;
		
		private string _ID_Proprietario;
		
		private string _Estado;
		
		private string _Texto;
		
		private EntityRef<Inquilino> _Inquilino;
		
		private EntityRef<Proprietario> _Proprietario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnData_denunciaChanging(System.DateTime value);
    partial void OnData_denunciaChanged();
    partial void OnID_InquilinoChanging(string value);
    partial void OnID_InquilinoChanged();
    partial void OnID_ProprietarioChanging(string value);
    partial void OnID_ProprietarioChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnTextoChanging(string value);
    partial void OnTextoChanged();
    #endregion
		
		public Denuncia()
		{
			this._Inquilino = default(EntityRef<Inquilino>);
			this._Proprietario = default(EntityRef<Proprietario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_denuncia", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_denuncia
		{
			get
			{
				return this._Data_denuncia;
			}
			set
			{
				if ((this._Data_denuncia != value))
				{
					this.OnData_denunciaChanging(value);
					this.SendPropertyChanging();
					this._Data_denuncia = value;
					this.SendPropertyChanged("Data_denuncia");
					this.OnData_denunciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Inquilino", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Inquilino
		{
			get
			{
				return this._ID_Inquilino;
			}
			set
			{
				if ((this._ID_Inquilino != value))
				{
					if (this._Inquilino.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_InquilinoChanging(value);
					this.SendPropertyChanging();
					this._ID_Inquilino = value;
					this.SendPropertyChanged("ID_Inquilino");
					this.OnID_InquilinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Proprietario", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Proprietario
		{
			get
			{
				return this._ID_Proprietario;
			}
			set
			{
				if ((this._ID_Proprietario != value))
				{
					if (this._Proprietario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProprietarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Proprietario = value;
					this.SendPropertyChanged("ID_Proprietario");
					this.OnID_ProprietarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Texto", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Texto
		{
			get
			{
				return this._Texto;
			}
			set
			{
				if ((this._Texto != value))
				{
					this.OnTextoChanging(value);
					this.SendPropertyChanging();
					this._Texto = value;
					this.SendPropertyChanged("Texto");
					this.OnTextoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inquilino_Denuncia", Storage="_Inquilino", ThisKey="ID_Inquilino", OtherKey="ID_Inquilino", IsForeignKey=true)]
		public Inquilino Inquilino
		{
			get
			{
				return this._Inquilino.Entity;
			}
			set
			{
				Inquilino previousValue = this._Inquilino.Entity;
				if (((previousValue != value) 
							|| (this._Inquilino.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inquilino.Entity = null;
						previousValue.Denuncias.Remove(this);
					}
					this._Inquilino.Entity = value;
					if ((value != null))
					{
						value.Denuncias.Add(this);
						this._ID_Inquilino = value.ID_Inquilino;
					}
					else
					{
						this._ID_Inquilino = default(string);
					}
					this.SendPropertyChanged("Inquilino");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proprietario_Denuncia", Storage="_Proprietario", ThisKey="ID_Proprietario", OtherKey="ID_Proprietario", IsForeignKey=true)]
		public Proprietario Proprietario
		{
			get
			{
				return this._Proprietario.Entity;
			}
			set
			{
				Proprietario previousValue = this._Proprietario.Entity;
				if (((previousValue != value) 
							|| (this._Proprietario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proprietario.Entity = null;
						previousValue.Denuncias.Remove(this);
					}
					this._Proprietario.Entity = value;
					if ((value != null))
					{
						value.Denuncias.Add(this);
						this._ID_Proprietario = value.ID_Proprietario;
					}
					else
					{
						this._ID_Proprietario = default(string);
					}
					this.SendPropertyChanged("Proprietario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DenunciaProp")]
	public partial class DenunciaProp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Data_denuncia;
		
		private string _ID_Inquilino;
		
		private string _ID_Proprietario;
		
		private string _Estado;
		
		private string _Texto;
		
		private EntityRef<Inquilino> _Inquilino;
		
		private EntityRef<Proprietario> _Proprietario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnData_denunciaChanging(System.DateTime value);
    partial void OnData_denunciaChanged();
    partial void OnID_InquilinoChanging(string value);
    partial void OnID_InquilinoChanged();
    partial void OnID_ProprietarioChanging(string value);
    partial void OnID_ProprietarioChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnTextoChanging(string value);
    partial void OnTextoChanged();
    #endregion
		
		public DenunciaProp()
		{
			this._Inquilino = default(EntityRef<Inquilino>);
			this._Proprietario = default(EntityRef<Proprietario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_denuncia", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_denuncia
		{
			get
			{
				return this._Data_denuncia;
			}
			set
			{
				if ((this._Data_denuncia != value))
				{
					this.OnData_denunciaChanging(value);
					this.SendPropertyChanging();
					this._Data_denuncia = value;
					this.SendPropertyChanged("Data_denuncia");
					this.OnData_denunciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Inquilino", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Inquilino
		{
			get
			{
				return this._ID_Inquilino;
			}
			set
			{
				if ((this._ID_Inquilino != value))
				{
					if (this._Inquilino.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_InquilinoChanging(value);
					this.SendPropertyChanging();
					this._ID_Inquilino = value;
					this.SendPropertyChanged("ID_Inquilino");
					this.OnID_InquilinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Proprietario", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Proprietario
		{
			get
			{
				return this._ID_Proprietario;
			}
			set
			{
				if ((this._ID_Proprietario != value))
				{
					if (this._Proprietario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProprietarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Proprietario = value;
					this.SendPropertyChanged("ID_Proprietario");
					this.OnID_ProprietarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Texto", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Texto
		{
			get
			{
				return this._Texto;
			}
			set
			{
				if ((this._Texto != value))
				{
					this.OnTextoChanging(value);
					this.SendPropertyChanging();
					this._Texto = value;
					this.SendPropertyChanged("Texto");
					this.OnTextoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inquilino_DenunciaProp", Storage="_Inquilino", ThisKey="ID_Inquilino", OtherKey="ID_Inquilino", IsForeignKey=true)]
		public Inquilino Inquilino
		{
			get
			{
				return this._Inquilino.Entity;
			}
			set
			{
				Inquilino previousValue = this._Inquilino.Entity;
				if (((previousValue != value) 
							|| (this._Inquilino.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inquilino.Entity = null;
						previousValue.DenunciaProps.Remove(this);
					}
					this._Inquilino.Entity = value;
					if ((value != null))
					{
						value.DenunciaProps.Add(this);
						this._ID_Inquilino = value.ID_Inquilino;
					}
					else
					{
						this._ID_Inquilino = default(string);
					}
					this.SendPropertyChanged("Inquilino");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proprietario_DenunciaProp", Storage="_Proprietario", ThisKey="ID_Proprietario", OtherKey="ID_Proprietario", IsForeignKey=true)]
		public Proprietario Proprietario
		{
			get
			{
				return this._Proprietario.Entity;
			}
			set
			{
				Proprietario previousValue = this._Proprietario.Entity;
				if (((previousValue != value) 
							|| (this._Proprietario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proprietario.Entity = null;
						previousValue.DenunciaProps.Remove(this);
					}
					this._Proprietario.Entity = value;
					if ((value != null))
					{
						value.DenunciaProps.Add(this);
						this._ID_Proprietario = value.ID_Proprietario;
					}
					else
					{
						this._ID_Proprietario = default(string);
					}
					this.SendPropertyChanged("Proprietario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Distrito")]
	public partial class Distrito : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Distrito;
		
		private string _Nome_distrito;
		
		private EntitySet<Situa_se> _Situa_ses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DistritoChanging(int value);
    partial void OnID_DistritoChanged();
    partial void OnNome_distritoChanging(string value);
    partial void OnNome_distritoChanged();
    #endregion
		
		public Distrito()
		{
			this._Situa_ses = new EntitySet<Situa_se>(new Action<Situa_se>(this.attach_Situa_ses), new Action<Situa_se>(this.detach_Situa_ses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Distrito", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Distrito
		{
			get
			{
				return this._ID_Distrito;
			}
			set
			{
				if ((this._ID_Distrito != value))
				{
					this.OnID_DistritoChanging(value);
					this.SendPropertyChanging();
					this._ID_Distrito = value;
					this.SendPropertyChanged("ID_Distrito");
					this.OnID_DistritoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome_distrito", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome_distrito
		{
			get
			{
				return this._Nome_distrito;
			}
			set
			{
				if ((this._Nome_distrito != value))
				{
					this.OnNome_distritoChanging(value);
					this.SendPropertyChanging();
					this._Nome_distrito = value;
					this.SendPropertyChanged("Nome_distrito");
					this.OnNome_distritoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Distrito_Situa_se", Storage="_Situa_ses", ThisKey="ID_Distrito", OtherKey="ID_Distrito")]
		public EntitySet<Situa_se> Situa_ses
		{
			get
			{
				return this._Situa_ses;
			}
			set
			{
				this._Situa_ses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Situa_ses(Situa_se entity)
		{
			this.SendPropertyChanging();
			entity.Distrito = this;
		}
		
		private void detach_Situa_ses(Situa_se entity)
		{
			this.SendPropertyChanging();
			entity.Distrito = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Encontra_se")]
	public partial class Encontra_se : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Imovel;
		
		private int _ID_Concelho;
		
		private EntityRef<Concelho> _Concelho;
		
		private EntityRef<Imovel> _Imovel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ImovelChanging(int value);
    partial void OnID_ImovelChanged();
    partial void OnID_ConcelhoChanging(int value);
    partial void OnID_ConcelhoChanged();
    #endregion
		
		public Encontra_se()
		{
			this._Concelho = default(EntityRef<Concelho>);
			this._Imovel = default(EntityRef<Imovel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Imovel", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Imovel
		{
			get
			{
				return this._ID_Imovel;
			}
			set
			{
				if ((this._ID_Imovel != value))
				{
					if (this._Imovel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ImovelChanging(value);
					this.SendPropertyChanging();
					this._ID_Imovel = value;
					this.SendPropertyChanged("ID_Imovel");
					this.OnID_ImovelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Concelho", DbType="Int NOT NULL")]
		public int ID_Concelho
		{
			get
			{
				return this._ID_Concelho;
			}
			set
			{
				if ((this._ID_Concelho != value))
				{
					if (this._Concelho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ConcelhoChanging(value);
					this.SendPropertyChanging();
					this._ID_Concelho = value;
					this.SendPropertyChanged("ID_Concelho");
					this.OnID_ConcelhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Concelho_Encontra_se", Storage="_Concelho", ThisKey="ID_Concelho", OtherKey="ID_Concelho", IsForeignKey=true)]
		public Concelho Concelho
		{
			get
			{
				return this._Concelho.Entity;
			}
			set
			{
				Concelho previousValue = this._Concelho.Entity;
				if (((previousValue != value) 
							|| (this._Concelho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Concelho.Entity = null;
						previousValue.Encontra_ses.Remove(this);
					}
					this._Concelho.Entity = value;
					if ((value != null))
					{
						value.Encontra_ses.Add(this);
						this._ID_Concelho = value.ID_Concelho;
					}
					else
					{
						this._ID_Concelho = default(int);
					}
					this.SendPropertyChanged("Concelho");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Encontra_se", Storage="_Imovel", ThisKey="ID_Imovel", OtherKey="ID_Imovel", IsForeignKey=true)]
		public Imovel Imovel
		{
			get
			{
				return this._Imovel.Entity;
			}
			set
			{
				Imovel previousValue = this._Imovel.Entity;
				if (((previousValue != value) 
							|| (this._Imovel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Imovel.Entity = null;
						previousValue.Encontra_se = null;
					}
					this._Imovel.Entity = value;
					if ((value != null))
					{
						value.Encontra_se = this;
						this._ID_Imovel = value.ID_Imovel;
					}
					else
					{
						this._ID_Imovel = default(int);
					}
					this.SendPropertyChanged("Imovel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fotos")]
	public partial class Foto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Foto;
		
		private string _Nome_Foto;
		
		private EntityRef<PossuiFoto> _PossuiFoto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_FotoChanging(int value);
    partial void OnID_FotoChanged();
    partial void OnNome_FotoChanging(string value);
    partial void OnNome_FotoChanged();
    #endregion
		
		public Foto()
		{
			this._PossuiFoto = default(EntityRef<PossuiFoto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Foto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Foto
		{
			get
			{
				return this._ID_Foto;
			}
			set
			{
				if ((this._ID_Foto != value))
				{
					this.OnID_FotoChanging(value);
					this.SendPropertyChanging();
					this._ID_Foto = value;
					this.SendPropertyChanged("ID_Foto");
					this.OnID_FotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome_Foto", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nome_Foto
		{
			get
			{
				return this._Nome_Foto;
			}
			set
			{
				if ((this._Nome_Foto != value))
				{
					this.OnNome_FotoChanging(value);
					this.SendPropertyChanging();
					this._Nome_Foto = value;
					this.SendPropertyChanged("Nome_Foto");
					this.OnNome_FotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Foto_PossuiFoto", Storage="_PossuiFoto", ThisKey="ID_Foto", OtherKey="ID_Foto", IsUnique=true, IsForeignKey=false)]
		public PossuiFoto PossuiFoto
		{
			get
			{
				return this._PossuiFoto.Entity;
			}
			set
			{
				PossuiFoto previousValue = this._PossuiFoto.Entity;
				if (((previousValue != value) 
							|| (this._PossuiFoto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PossuiFoto.Entity = null;
						previousValue.Foto = null;
					}
					this._PossuiFoto.Entity = value;
					if ((value != null))
					{
						value.Foto = this;
					}
					this.SendPropertyChanged("PossuiFoto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Imovel")]
	public partial class Imovel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Imovel;
		
		private string _Rua;
		
		private string _Foto_principal;
		
		private string _Codigo_Postal;
		
		private int _N_Porta;
		
		private int _Estado;
		
		private string _Finalidade;
		
		private System.DateTime _Data_de_Inscricao;
		
		private System.Nullable<decimal> _Valor_aluguer;
		
		private System.Nullable<decimal> _Valor_venda;
		
		private string _Descricao;
		
		private int _Metros;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private bool _Garagem;
		
		private int _Quantidade_de_Suits;
		
		private int _Quantidade_de_Quartos;
		
		private int _Quantidade_de_Casas_de_Banho;
		
		private string _Tipo_de_Imovel;
		
		private int _N_vizualizacoes;
		
		private EntitySet<Aluga> _Alugas;
		
		private EntitySet<Comenta> _Comentas;
		
		private EntitySet<Compra> _Compras;
		
		private EntityRef<Encontra_se> _Encontra_se;
		
		private EntitySet<PossuiFoto> _PossuiFotos;
		
		private EntityRef<PossuiImovel> _PossuiImovel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ImovelChanging(int value);
    partial void OnID_ImovelChanged();
    partial void OnRuaChanging(string value);
    partial void OnRuaChanged();
    partial void OnFoto_principalChanging(string value);
    partial void OnFoto_principalChanged();
    partial void OnCodigo_PostalChanging(string value);
    partial void OnCodigo_PostalChanged();
    partial void OnN_PortaChanging(int value);
    partial void OnN_PortaChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnFinalidadeChanging(string value);
    partial void OnFinalidadeChanged();
    partial void OnData_de_InscricaoChanging(System.DateTime value);
    partial void OnData_de_InscricaoChanged();
    partial void OnValor_aluguerChanging(System.Nullable<decimal> value);
    partial void OnValor_aluguerChanged();
    partial void OnValor_vendaChanging(System.Nullable<decimal> value);
    partial void OnValor_vendaChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnMetrosChanging(int value);
    partial void OnMetrosChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnGaragemChanging(bool value);
    partial void OnGaragemChanged();
    partial void OnQuantidade_de_SuitsChanging(int value);
    partial void OnQuantidade_de_SuitsChanged();
    partial void OnQuantidade_de_QuartosChanging(int value);
    partial void OnQuantidade_de_QuartosChanged();
    partial void OnQuantidade_de_Casas_de_BanhoChanging(int value);
    partial void OnQuantidade_de_Casas_de_BanhoChanged();
    partial void OnTipo_de_ImovelChanging(string value);
    partial void OnTipo_de_ImovelChanged();
    partial void OnN_vizualizacoesChanging(int value);
    partial void OnN_vizualizacoesChanged();
    #endregion
		
		public Imovel()
		{
			this._Alugas = new EntitySet<Aluga>(new Action<Aluga>(this.attach_Alugas), new Action<Aluga>(this.detach_Alugas));
			this._Comentas = new EntitySet<Comenta>(new Action<Comenta>(this.attach_Comentas), new Action<Comenta>(this.detach_Comentas));
			this._Compras = new EntitySet<Compra>(new Action<Compra>(this.attach_Compras), new Action<Compra>(this.detach_Compras));
			this._Encontra_se = default(EntityRef<Encontra_se>);
			this._PossuiFotos = new EntitySet<PossuiFoto>(new Action<PossuiFoto>(this.attach_PossuiFotos), new Action<PossuiFoto>(this.detach_PossuiFotos));
			this._PossuiImovel = default(EntityRef<PossuiImovel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Imovel", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Imovel
		{
			get
			{
				return this._ID_Imovel;
			}
			set
			{
				if ((this._ID_Imovel != value))
				{
					this.OnID_ImovelChanging(value);
					this.SendPropertyChanging();
					this._ID_Imovel = value;
					this.SendPropertyChanged("ID_Imovel");
					this.OnID_ImovelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rua", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Rua
		{
			get
			{
				return this._Rua;
			}
			set
			{
				if ((this._Rua != value))
				{
					this.OnRuaChanging(value);
					this.SendPropertyChanging();
					this._Rua = value;
					this.SendPropertyChanged("Rua");
					this.OnRuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foto_principal", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Foto_principal
		{
			get
			{
				return this._Foto_principal;
			}
			set
			{
				if ((this._Foto_principal != value))
				{
					this.OnFoto_principalChanging(value);
					this.SendPropertyChanging();
					this._Foto_principal = value;
					this.SendPropertyChanged("Foto_principal");
					this.OnFoto_principalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo_Postal", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Codigo_Postal
		{
			get
			{
				return this._Codigo_Postal;
			}
			set
			{
				if ((this._Codigo_Postal != value))
				{
					this.OnCodigo_PostalChanging(value);
					this.SendPropertyChanging();
					this._Codigo_Postal = value;
					this.SendPropertyChanged("Codigo_Postal");
					this.OnCodigo_PostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N_Porta", DbType="Int NOT NULL")]
		public int N_Porta
		{
			get
			{
				return this._N_Porta;
			}
			set
			{
				if ((this._N_Porta != value))
				{
					this.OnN_PortaChanging(value);
					this.SendPropertyChanging();
					this._N_Porta = value;
					this.SendPropertyChanged("N_Porta");
					this.OnN_PortaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Finalidade", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Finalidade
		{
			get
			{
				return this._Finalidade;
			}
			set
			{
				if ((this._Finalidade != value))
				{
					this.OnFinalidadeChanging(value);
					this.SendPropertyChanging();
					this._Finalidade = value;
					this.SendPropertyChanged("Finalidade");
					this.OnFinalidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_de_Inscricao", DbType="Date NOT NULL")]
		public System.DateTime Data_de_Inscricao
		{
			get
			{
				return this._Data_de_Inscricao;
			}
			set
			{
				if ((this._Data_de_Inscricao != value))
				{
					this.OnData_de_InscricaoChanging(value);
					this.SendPropertyChanging();
					this._Data_de_Inscricao = value;
					this.SendPropertyChanged("Data_de_Inscricao");
					this.OnData_de_InscricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor_aluguer", DbType="Money")]
		public System.Nullable<decimal> Valor_aluguer
		{
			get
			{
				return this._Valor_aluguer;
			}
			set
			{
				if ((this._Valor_aluguer != value))
				{
					this.OnValor_aluguerChanging(value);
					this.SendPropertyChanging();
					this._Valor_aluguer = value;
					this.SendPropertyChanged("Valor_aluguer");
					this.OnValor_aluguerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor_venda", DbType="Money")]
		public System.Nullable<decimal> Valor_venda
		{
			get
			{
				return this._Valor_venda;
			}
			set
			{
				if ((this._Valor_venda != value))
				{
					this.OnValor_vendaChanging(value);
					this.SendPropertyChanging();
					this._Valor_venda = value;
					this.SendPropertyChanged("Valor_venda");
					this.OnValor_vendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metros", DbType="Int NOT NULL")]
		public int Metros
		{
			get
			{
				return this._Metros;
			}
			set
			{
				if ((this._Metros != value))
				{
					this.OnMetrosChanging(value);
					this.SendPropertyChanging();
					this._Metros = value;
					this.SendPropertyChanged("Metros");
					this.OnMetrosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Garagem", DbType="Bit NOT NULL")]
		public bool Garagem
		{
			get
			{
				return this._Garagem;
			}
			set
			{
				if ((this._Garagem != value))
				{
					this.OnGaragemChanging(value);
					this.SendPropertyChanging();
					this._Garagem = value;
					this.SendPropertyChanged("Garagem");
					this.OnGaragemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantidade_de_Suits", DbType="Int NOT NULL")]
		public int Quantidade_de_Suits
		{
			get
			{
				return this._Quantidade_de_Suits;
			}
			set
			{
				if ((this._Quantidade_de_Suits != value))
				{
					this.OnQuantidade_de_SuitsChanging(value);
					this.SendPropertyChanging();
					this._Quantidade_de_Suits = value;
					this.SendPropertyChanged("Quantidade_de_Suits");
					this.OnQuantidade_de_SuitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantidade_de_Quartos", DbType="Int NOT NULL")]
		public int Quantidade_de_Quartos
		{
			get
			{
				return this._Quantidade_de_Quartos;
			}
			set
			{
				if ((this._Quantidade_de_Quartos != value))
				{
					this.OnQuantidade_de_QuartosChanging(value);
					this.SendPropertyChanging();
					this._Quantidade_de_Quartos = value;
					this.SendPropertyChanged("Quantidade_de_Quartos");
					this.OnQuantidade_de_QuartosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantidade_de_Casas_de_Banho", DbType="Int NOT NULL")]
		public int Quantidade_de_Casas_de_Banho
		{
			get
			{
				return this._Quantidade_de_Casas_de_Banho;
			}
			set
			{
				if ((this._Quantidade_de_Casas_de_Banho != value))
				{
					this.OnQuantidade_de_Casas_de_BanhoChanging(value);
					this.SendPropertyChanging();
					this._Quantidade_de_Casas_de_Banho = value;
					this.SendPropertyChanged("Quantidade_de_Casas_de_Banho");
					this.OnQuantidade_de_Casas_de_BanhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo_de_Imovel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tipo_de_Imovel
		{
			get
			{
				return this._Tipo_de_Imovel;
			}
			set
			{
				if ((this._Tipo_de_Imovel != value))
				{
					this.OnTipo_de_ImovelChanging(value);
					this.SendPropertyChanging();
					this._Tipo_de_Imovel = value;
					this.SendPropertyChanged("Tipo_de_Imovel");
					this.OnTipo_de_ImovelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N_vizualizacoes", DbType="Int NOT NULL")]
		public int N_vizualizacoes
		{
			get
			{
				return this._N_vizualizacoes;
			}
			set
			{
				if ((this._N_vizualizacoes != value))
				{
					this.OnN_vizualizacoesChanging(value);
					this.SendPropertyChanging();
					this._N_vizualizacoes = value;
					this.SendPropertyChanged("N_vizualizacoes");
					this.OnN_vizualizacoesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Aluga", Storage="_Alugas", ThisKey="ID_Imovel", OtherKey="ID_Imovel")]
		public EntitySet<Aluga> Alugas
		{
			get
			{
				return this._Alugas;
			}
			set
			{
				this._Alugas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Comenta", Storage="_Comentas", ThisKey="ID_Imovel", OtherKey="ID_Imovel")]
		public EntitySet<Comenta> Comentas
		{
			get
			{
				return this._Comentas;
			}
			set
			{
				this._Comentas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Compra", Storage="_Compras", ThisKey="ID_Imovel", OtherKey="ID_Imovel")]
		public EntitySet<Compra> Compras
		{
			get
			{
				return this._Compras;
			}
			set
			{
				this._Compras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Encontra_se", Storage="_Encontra_se", ThisKey="ID_Imovel", OtherKey="ID_Imovel", IsUnique=true, IsForeignKey=false)]
		public Encontra_se Encontra_se
		{
			get
			{
				return this._Encontra_se.Entity;
			}
			set
			{
				Encontra_se previousValue = this._Encontra_se.Entity;
				if (((previousValue != value) 
							|| (this._Encontra_se.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Encontra_se.Entity = null;
						previousValue.Imovel = null;
					}
					this._Encontra_se.Entity = value;
					if ((value != null))
					{
						value.Imovel = this;
					}
					this.SendPropertyChanged("Encontra_se");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_PossuiFoto", Storage="_PossuiFotos", ThisKey="ID_Imovel", OtherKey="ID_Imovel")]
		public EntitySet<PossuiFoto> PossuiFotos
		{
			get
			{
				return this._PossuiFotos;
			}
			set
			{
				this._PossuiFotos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_PossuiImovel", Storage="_PossuiImovel", ThisKey="ID_Imovel", OtherKey="ID_Imovel", IsUnique=true, IsForeignKey=false)]
		public PossuiImovel PossuiImovel
		{
			get
			{
				return this._PossuiImovel.Entity;
			}
			set
			{
				PossuiImovel previousValue = this._PossuiImovel.Entity;
				if (((previousValue != value) 
							|| (this._PossuiImovel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PossuiImovel.Entity = null;
						previousValue.Imovel = null;
					}
					this._PossuiImovel.Entity = value;
					if ((value != null))
					{
						value.Imovel = this;
					}
					this.SendPropertyChanged("PossuiImovel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alugas(Aluga entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = this;
		}
		
		private void detach_Alugas(Aluga entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = null;
		}
		
		private void attach_Comentas(Comenta entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = this;
		}
		
		private void detach_Comentas(Comenta entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = null;
		}
		
		private void attach_Compras(Compra entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = this;
		}
		
		private void detach_Compras(Compra entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = null;
		}
		
		private void attach_PossuiFotos(PossuiFoto entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = this;
		}
		
		private void detach_PossuiFotos(PossuiFoto entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inquilino")]
	public partial class Inquilino : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_Inquilino;
		
		private string _Tipo_Utilizador;
		
		private string _Foto_perfil;
		
		private string _Nome;
		
		private string _Email;
		
		private System.DateTime _Data_de_Registo;
		
		private System.DateTime _Data_Nascimento;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<int> _Estado;
		
		private string _Numero_de_Telemovel;
		
		private int _Cartao_de_Cidadao;
		
		private EntitySet<Aluga> _Alugas;
		
		private EntitySet<BloqueiaInqulino> _BloqueiaInqulinos;
		
		private EntitySet<Comenta> _Comentas;
		
		private EntitySet<Compra> _Compras;
		
		private EntitySet<Denuncia> _Denuncias;
		
		private EntitySet<DenunciaProp> _DenunciaProps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_InquilinoChanging(string value);
    partial void OnID_InquilinoChanged();
    partial void OnTipo_UtilizadorChanging(string value);
    partial void OnTipo_UtilizadorChanged();
    partial void OnFoto_perfilChanging(string value);
    partial void OnFoto_perfilChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnData_de_RegistoChanging(System.DateTime value);
    partial void OnData_de_RegistoChanged();
    partial void OnData_NascimentoChanging(System.DateTime value);
    partial void OnData_NascimentoChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEstadoChanging(System.Nullable<int> value);
    partial void OnEstadoChanged();
    partial void OnNumero_de_TelemovelChanging(string value);
    partial void OnNumero_de_TelemovelChanged();
    partial void OnCartao_de_CidadaoChanging(int value);
    partial void OnCartao_de_CidadaoChanged();
    #endregion
		
		public Inquilino()
		{
			this._Alugas = new EntitySet<Aluga>(new Action<Aluga>(this.attach_Alugas), new Action<Aluga>(this.detach_Alugas));
			this._BloqueiaInqulinos = new EntitySet<BloqueiaInqulino>(new Action<BloqueiaInqulino>(this.attach_BloqueiaInqulinos), new Action<BloqueiaInqulino>(this.detach_BloqueiaInqulinos));
			this._Comentas = new EntitySet<Comenta>(new Action<Comenta>(this.attach_Comentas), new Action<Comenta>(this.detach_Comentas));
			this._Compras = new EntitySet<Compra>(new Action<Compra>(this.attach_Compras), new Action<Compra>(this.detach_Compras));
			this._Denuncias = new EntitySet<Denuncia>(new Action<Denuncia>(this.attach_Denuncias), new Action<Denuncia>(this.detach_Denuncias));
			this._DenunciaProps = new EntitySet<DenunciaProp>(new Action<DenunciaProp>(this.attach_DenunciaProps), new Action<DenunciaProp>(this.detach_DenunciaProps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Inquilino", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Inquilino
		{
			get
			{
				return this._ID_Inquilino;
			}
			set
			{
				if ((this._ID_Inquilino != value))
				{
					this.OnID_InquilinoChanging(value);
					this.SendPropertyChanging();
					this._ID_Inquilino = value;
					this.SendPropertyChanged("ID_Inquilino");
					this.OnID_InquilinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo_Utilizador", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Tipo_Utilizador
		{
			get
			{
				return this._Tipo_Utilizador;
			}
			set
			{
				if ((this._Tipo_Utilizador != value))
				{
					this.OnTipo_UtilizadorChanging(value);
					this.SendPropertyChanging();
					this._Tipo_Utilizador = value;
					this.SendPropertyChanged("Tipo_Utilizador");
					this.OnTipo_UtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foto_perfil", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Foto_perfil
		{
			get
			{
				return this._Foto_perfil;
			}
			set
			{
				if ((this._Foto_perfil != value))
				{
					this.OnFoto_perfilChanging(value);
					this.SendPropertyChanging();
					this._Foto_perfil = value;
					this.SendPropertyChanged("Foto_perfil");
					this.OnFoto_perfilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_de_Registo", DbType="Date NOT NULL")]
		public System.DateTime Data_de_Registo
		{
			get
			{
				return this._Data_de_Registo;
			}
			set
			{
				if ((this._Data_de_Registo != value))
				{
					this.OnData_de_RegistoChanging(value);
					this.SendPropertyChanging();
					this._Data_de_Registo = value;
					this.SendPropertyChanged("Data_de_Registo");
					this.OnData_de_RegistoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Nascimento", DbType="Date NOT NULL")]
		public System.DateTime Data_Nascimento
		{
			get
			{
				return this._Data_Nascimento;
			}
			set
			{
				if ((this._Data_Nascimento != value))
				{
					this.OnData_NascimentoChanging(value);
					this.SendPropertyChanging();
					this._Data_Nascimento = value;
					this.SendPropertyChanged("Data_Nascimento");
					this.OnData_NascimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int")]
		public System.Nullable<int> Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_de_Telemovel", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Numero_de_Telemovel
		{
			get
			{
				return this._Numero_de_Telemovel;
			}
			set
			{
				if ((this._Numero_de_Telemovel != value))
				{
					this.OnNumero_de_TelemovelChanging(value);
					this.SendPropertyChanging();
					this._Numero_de_Telemovel = value;
					this.SendPropertyChanged("Numero_de_Telemovel");
					this.OnNumero_de_TelemovelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cartao_de_Cidadao", DbType="Int NOT NULL")]
		public int Cartao_de_Cidadao
		{
			get
			{
				return this._Cartao_de_Cidadao;
			}
			set
			{
				if ((this._Cartao_de_Cidadao != value))
				{
					this.OnCartao_de_CidadaoChanging(value);
					this.SendPropertyChanging();
					this._Cartao_de_Cidadao = value;
					this.SendPropertyChanged("Cartao_de_Cidadao");
					this.OnCartao_de_CidadaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inquilino_Aluga", Storage="_Alugas", ThisKey="ID_Inquilino", OtherKey="ID_Inquilino")]
		public EntitySet<Aluga> Alugas
		{
			get
			{
				return this._Alugas;
			}
			set
			{
				this._Alugas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inquilino_BloqueiaInqulino", Storage="_BloqueiaInqulinos", ThisKey="ID_Inquilino", OtherKey="ID_Inquilino")]
		public EntitySet<BloqueiaInqulino> BloqueiaInqulinos
		{
			get
			{
				return this._BloqueiaInqulinos;
			}
			set
			{
				this._BloqueiaInqulinos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inquilino_Comenta", Storage="_Comentas", ThisKey="ID_Inquilino", OtherKey="ID_Inquilino")]
		public EntitySet<Comenta> Comentas
		{
			get
			{
				return this._Comentas;
			}
			set
			{
				this._Comentas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inquilino_Compra", Storage="_Compras", ThisKey="ID_Inquilino", OtherKey="ID_Inquilino")]
		public EntitySet<Compra> Compras
		{
			get
			{
				return this._Compras;
			}
			set
			{
				this._Compras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inquilino_Denuncia", Storage="_Denuncias", ThisKey="ID_Inquilino", OtherKey="ID_Inquilino")]
		public EntitySet<Denuncia> Denuncias
		{
			get
			{
				return this._Denuncias;
			}
			set
			{
				this._Denuncias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inquilino_DenunciaProp", Storage="_DenunciaProps", ThisKey="ID_Inquilino", OtherKey="ID_Inquilino")]
		public EntitySet<DenunciaProp> DenunciaProps
		{
			get
			{
				return this._DenunciaProps;
			}
			set
			{
				this._DenunciaProps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alugas(Aluga entity)
		{
			this.SendPropertyChanging();
			entity.Inquilino = this;
		}
		
		private void detach_Alugas(Aluga entity)
		{
			this.SendPropertyChanging();
			entity.Inquilino = null;
		}
		
		private void attach_BloqueiaInqulinos(BloqueiaInqulino entity)
		{
			this.SendPropertyChanging();
			entity.Inquilino = this;
		}
		
		private void detach_BloqueiaInqulinos(BloqueiaInqulino entity)
		{
			this.SendPropertyChanging();
			entity.Inquilino = null;
		}
		
		private void attach_Comentas(Comenta entity)
		{
			this.SendPropertyChanging();
			entity.Inquilino = this;
		}
		
		private void detach_Comentas(Comenta entity)
		{
			this.SendPropertyChanging();
			entity.Inquilino = null;
		}
		
		private void attach_Compras(Compra entity)
		{
			this.SendPropertyChanging();
			entity.Inquilino = this;
		}
		
		private void detach_Compras(Compra entity)
		{
			this.SendPropertyChanging();
			entity.Inquilino = null;
		}
		
		private void attach_Denuncias(Denuncia entity)
		{
			this.SendPropertyChanging();
			entity.Inquilino = this;
		}
		
		private void detach_Denuncias(Denuncia entity)
		{
			this.SendPropertyChanging();
			entity.Inquilino = null;
		}
		
		private void attach_DenunciaProps(DenunciaProp entity)
		{
			this.SendPropertyChanging();
			entity.Inquilino = this;
		}
		
		private void detach_DenunciaProps(DenunciaProp entity)
		{
			this.SendPropertyChanging();
			entity.Inquilino = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PossuiFotos")]
	public partial class PossuiFoto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Foto;
		
		private int _ID_Imovel;
		
		private EntityRef<Foto> _Foto;
		
		private EntityRef<Imovel> _Imovel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_FotoChanging(int value);
    partial void OnID_FotoChanged();
    partial void OnID_ImovelChanging(int value);
    partial void OnID_ImovelChanged();
    #endregion
		
		public PossuiFoto()
		{
			this._Foto = default(EntityRef<Foto>);
			this._Imovel = default(EntityRef<Imovel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Foto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Foto
		{
			get
			{
				return this._ID_Foto;
			}
			set
			{
				if ((this._ID_Foto != value))
				{
					if (this._Foto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_FotoChanging(value);
					this.SendPropertyChanging();
					this._ID_Foto = value;
					this.SendPropertyChanged("ID_Foto");
					this.OnID_FotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Imovel", DbType="Int NOT NULL")]
		public int ID_Imovel
		{
			get
			{
				return this._ID_Imovel;
			}
			set
			{
				if ((this._ID_Imovel != value))
				{
					if (this._Imovel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ImovelChanging(value);
					this.SendPropertyChanging();
					this._ID_Imovel = value;
					this.SendPropertyChanged("ID_Imovel");
					this.OnID_ImovelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Foto_PossuiFoto", Storage="_Foto", ThisKey="ID_Foto", OtherKey="ID_Foto", IsForeignKey=true)]
		public Foto Foto
		{
			get
			{
				return this._Foto.Entity;
			}
			set
			{
				Foto previousValue = this._Foto.Entity;
				if (((previousValue != value) 
							|| (this._Foto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Foto.Entity = null;
						previousValue.PossuiFoto = null;
					}
					this._Foto.Entity = value;
					if ((value != null))
					{
						value.PossuiFoto = this;
						this._ID_Foto = value.ID_Foto;
					}
					else
					{
						this._ID_Foto = default(int);
					}
					this.SendPropertyChanged("Foto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_PossuiFoto", Storage="_Imovel", ThisKey="ID_Imovel", OtherKey="ID_Imovel", IsForeignKey=true)]
		public Imovel Imovel
		{
			get
			{
				return this._Imovel.Entity;
			}
			set
			{
				Imovel previousValue = this._Imovel.Entity;
				if (((previousValue != value) 
							|| (this._Imovel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Imovel.Entity = null;
						previousValue.PossuiFotos.Remove(this);
					}
					this._Imovel.Entity = value;
					if ((value != null))
					{
						value.PossuiFotos.Add(this);
						this._ID_Imovel = value.ID_Imovel;
					}
					else
					{
						this._ID_Imovel = default(int);
					}
					this.SendPropertyChanged("Imovel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PossuiImovel")]
	public partial class PossuiImovel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_Proprietario;
		
		private int _ID_Imovel;
		
		private EntityRef<Imovel> _Imovel;
		
		private EntityRef<Proprietario> _Proprietario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ProprietarioChanging(string value);
    partial void OnID_ProprietarioChanged();
    partial void OnID_ImovelChanging(int value);
    partial void OnID_ImovelChanged();
    #endregion
		
		public PossuiImovel()
		{
			this._Imovel = default(EntityRef<Imovel>);
			this._Proprietario = default(EntityRef<Proprietario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Proprietario", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ID_Proprietario
		{
			get
			{
				return this._ID_Proprietario;
			}
			set
			{
				if ((this._ID_Proprietario != value))
				{
					if (this._Proprietario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProprietarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Proprietario = value;
					this.SendPropertyChanged("ID_Proprietario");
					this.OnID_ProprietarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Imovel", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Imovel
		{
			get
			{
				return this._ID_Imovel;
			}
			set
			{
				if ((this._ID_Imovel != value))
				{
					if (this._Imovel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ImovelChanging(value);
					this.SendPropertyChanging();
					this._ID_Imovel = value;
					this.SendPropertyChanged("ID_Imovel");
					this.OnID_ImovelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_PossuiImovel", Storage="_Imovel", ThisKey="ID_Imovel", OtherKey="ID_Imovel", IsForeignKey=true)]
		public Imovel Imovel
		{
			get
			{
				return this._Imovel.Entity;
			}
			set
			{
				Imovel previousValue = this._Imovel.Entity;
				if (((previousValue != value) 
							|| (this._Imovel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Imovel.Entity = null;
						previousValue.PossuiImovel = null;
					}
					this._Imovel.Entity = value;
					if ((value != null))
					{
						value.PossuiImovel = this;
						this._ID_Imovel = value.ID_Imovel;
					}
					else
					{
						this._ID_Imovel = default(int);
					}
					this.SendPropertyChanged("Imovel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proprietario_PossuiImovel", Storage="_Proprietario", ThisKey="ID_Proprietario", OtherKey="ID_Proprietario", IsForeignKey=true)]
		public Proprietario Proprietario
		{
			get
			{
				return this._Proprietario.Entity;
			}
			set
			{
				Proprietario previousValue = this._Proprietario.Entity;
				if (((previousValue != value) 
							|| (this._Proprietario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proprietario.Entity = null;
						previousValue.PossuiImovels.Remove(this);
					}
					this._Proprietario.Entity = value;
					if ((value != null))
					{
						value.PossuiImovels.Add(this);
						this._ID_Proprietario = value.ID_Proprietario;
					}
					else
					{
						this._ID_Proprietario = default(string);
					}
					this.SendPropertyChanged("Proprietario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Proprietario")]
	public partial class Proprietario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_Proprietario;
		
		private string _Tipo_Utilizador;
		
		private string _Foto_perfil;
		
		private string _Nome;
		
		private string _Email;
		
		private System.DateTime _Data_de_Registo;
		
		private System.DateTime _Data_Nascimento;
		
		private string _Username;
		
		private System.Nullable<int> _Estado;
		
		private string _Password;
		
		private string _Numero_de_Telemovel;
		
		private int _Cartao_de_Cidadao;
		
		private EntitySet<Aluga> _Alugas;
		
		private EntitySet<BloqueiaProprietario> _BloqueiaProprietarios;
		
		private EntitySet<Compra> _Compras;
		
		private EntitySet<Denuncia> _Denuncias;
		
		private EntitySet<DenunciaProp> _DenunciaProps;
		
		private EntitySet<PossuiImovel> _PossuiImovels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ProprietarioChanging(string value);
    partial void OnID_ProprietarioChanged();
    partial void OnTipo_UtilizadorChanging(string value);
    partial void OnTipo_UtilizadorChanged();
    partial void OnFoto_perfilChanging(string value);
    partial void OnFoto_perfilChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnData_de_RegistoChanging(System.DateTime value);
    partial void OnData_de_RegistoChanged();
    partial void OnData_NascimentoChanging(System.DateTime value);
    partial void OnData_NascimentoChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnEstadoChanging(System.Nullable<int> value);
    partial void OnEstadoChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNumero_de_TelemovelChanging(string value);
    partial void OnNumero_de_TelemovelChanged();
    partial void OnCartao_de_CidadaoChanging(int value);
    partial void OnCartao_de_CidadaoChanged();
    #endregion
		
		public Proprietario()
		{
			this._Alugas = new EntitySet<Aluga>(new Action<Aluga>(this.attach_Alugas), new Action<Aluga>(this.detach_Alugas));
			this._BloqueiaProprietarios = new EntitySet<BloqueiaProprietario>(new Action<BloqueiaProprietario>(this.attach_BloqueiaProprietarios), new Action<BloqueiaProprietario>(this.detach_BloqueiaProprietarios));
			this._Compras = new EntitySet<Compra>(new Action<Compra>(this.attach_Compras), new Action<Compra>(this.detach_Compras));
			this._Denuncias = new EntitySet<Denuncia>(new Action<Denuncia>(this.attach_Denuncias), new Action<Denuncia>(this.detach_Denuncias));
			this._DenunciaProps = new EntitySet<DenunciaProp>(new Action<DenunciaProp>(this.attach_DenunciaProps), new Action<DenunciaProp>(this.detach_DenunciaProps));
			this._PossuiImovels = new EntitySet<PossuiImovel>(new Action<PossuiImovel>(this.attach_PossuiImovels), new Action<PossuiImovel>(this.detach_PossuiImovels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Proprietario", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Proprietario
		{
			get
			{
				return this._ID_Proprietario;
			}
			set
			{
				if ((this._ID_Proprietario != value))
				{
					this.OnID_ProprietarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Proprietario = value;
					this.SendPropertyChanged("ID_Proprietario");
					this.OnID_ProprietarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo_Utilizador", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Tipo_Utilizador
		{
			get
			{
				return this._Tipo_Utilizador;
			}
			set
			{
				if ((this._Tipo_Utilizador != value))
				{
					this.OnTipo_UtilizadorChanging(value);
					this.SendPropertyChanging();
					this._Tipo_Utilizador = value;
					this.SendPropertyChanged("Tipo_Utilizador");
					this.OnTipo_UtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foto_perfil", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Foto_perfil
		{
			get
			{
				return this._Foto_perfil;
			}
			set
			{
				if ((this._Foto_perfil != value))
				{
					this.OnFoto_perfilChanging(value);
					this.SendPropertyChanging();
					this._Foto_perfil = value;
					this.SendPropertyChanged("Foto_perfil");
					this.OnFoto_perfilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_de_Registo", DbType="Date NOT NULL")]
		public System.DateTime Data_de_Registo
		{
			get
			{
				return this._Data_de_Registo;
			}
			set
			{
				if ((this._Data_de_Registo != value))
				{
					this.OnData_de_RegistoChanging(value);
					this.SendPropertyChanging();
					this._Data_de_Registo = value;
					this.SendPropertyChanged("Data_de_Registo");
					this.OnData_de_RegistoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Nascimento", DbType="Date NOT NULL")]
		public System.DateTime Data_Nascimento
		{
			get
			{
				return this._Data_Nascimento;
			}
			set
			{
				if ((this._Data_Nascimento != value))
				{
					this.OnData_NascimentoChanging(value);
					this.SendPropertyChanging();
					this._Data_Nascimento = value;
					this.SendPropertyChanged("Data_Nascimento");
					this.OnData_NascimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int")]
		public System.Nullable<int> Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_de_Telemovel", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Numero_de_Telemovel
		{
			get
			{
				return this._Numero_de_Telemovel;
			}
			set
			{
				if ((this._Numero_de_Telemovel != value))
				{
					this.OnNumero_de_TelemovelChanging(value);
					this.SendPropertyChanging();
					this._Numero_de_Telemovel = value;
					this.SendPropertyChanged("Numero_de_Telemovel");
					this.OnNumero_de_TelemovelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cartao_de_Cidadao", DbType="Int NOT NULL")]
		public int Cartao_de_Cidadao
		{
			get
			{
				return this._Cartao_de_Cidadao;
			}
			set
			{
				if ((this._Cartao_de_Cidadao != value))
				{
					this.OnCartao_de_CidadaoChanging(value);
					this.SendPropertyChanging();
					this._Cartao_de_Cidadao = value;
					this.SendPropertyChanged("Cartao_de_Cidadao");
					this.OnCartao_de_CidadaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proprietario_Aluga", Storage="_Alugas", ThisKey="ID_Proprietario", OtherKey="ID_Proprietario")]
		public EntitySet<Aluga> Alugas
		{
			get
			{
				return this._Alugas;
			}
			set
			{
				this._Alugas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proprietario_BloqueiaProprietario", Storage="_BloqueiaProprietarios", ThisKey="ID_Proprietario", OtherKey="ID_Proprietario")]
		public EntitySet<BloqueiaProprietario> BloqueiaProprietarios
		{
			get
			{
				return this._BloqueiaProprietarios;
			}
			set
			{
				this._BloqueiaProprietarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proprietario_Compra", Storage="_Compras", ThisKey="ID_Proprietario", OtherKey="ID_Proprietario")]
		public EntitySet<Compra> Compras
		{
			get
			{
				return this._Compras;
			}
			set
			{
				this._Compras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proprietario_Denuncia", Storage="_Denuncias", ThisKey="ID_Proprietario", OtherKey="ID_Proprietario")]
		public EntitySet<Denuncia> Denuncias
		{
			get
			{
				return this._Denuncias;
			}
			set
			{
				this._Denuncias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proprietario_DenunciaProp", Storage="_DenunciaProps", ThisKey="ID_Proprietario", OtherKey="ID_Proprietario")]
		public EntitySet<DenunciaProp> DenunciaProps
		{
			get
			{
				return this._DenunciaProps;
			}
			set
			{
				this._DenunciaProps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proprietario_PossuiImovel", Storage="_PossuiImovels", ThisKey="ID_Proprietario", OtherKey="ID_Proprietario")]
		public EntitySet<PossuiImovel> PossuiImovels
		{
			get
			{
				return this._PossuiImovels;
			}
			set
			{
				this._PossuiImovels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alugas(Aluga entity)
		{
			this.SendPropertyChanging();
			entity.Proprietario = this;
		}
		
		private void detach_Alugas(Aluga entity)
		{
			this.SendPropertyChanging();
			entity.Proprietario = null;
		}
		
		private void attach_BloqueiaProprietarios(BloqueiaProprietario entity)
		{
			this.SendPropertyChanging();
			entity.Proprietario = this;
		}
		
		private void detach_BloqueiaProprietarios(BloqueiaProprietario entity)
		{
			this.SendPropertyChanging();
			entity.Proprietario = null;
		}
		
		private void attach_Compras(Compra entity)
		{
			this.SendPropertyChanging();
			entity.Proprietario = this;
		}
		
		private void detach_Compras(Compra entity)
		{
			this.SendPropertyChanging();
			entity.Proprietario = null;
		}
		
		private void attach_Denuncias(Denuncia entity)
		{
			this.SendPropertyChanging();
			entity.Proprietario = this;
		}
		
		private void detach_Denuncias(Denuncia entity)
		{
			this.SendPropertyChanging();
			entity.Proprietario = null;
		}
		
		private void attach_DenunciaProps(DenunciaProp entity)
		{
			this.SendPropertyChanging();
			entity.Proprietario = this;
		}
		
		private void detach_DenunciaProps(DenunciaProp entity)
		{
			this.SendPropertyChanging();
			entity.Proprietario = null;
		}
		
		private void attach_PossuiImovels(PossuiImovel entity)
		{
			this.SendPropertyChanging();
			entity.Proprietario = this;
		}
		
		private void detach_PossuiImovels(PossuiImovel entity)
		{
			this.SendPropertyChanging();
			entity.Proprietario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Situa_se")]
	public partial class Situa_se : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Distrito;
		
		private int _ID_Concelho;
		
		private EntityRef<Concelho> _Concelho;
		
		private EntityRef<Distrito> _Distrito;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DistritoChanging(int value);
    partial void OnID_DistritoChanged();
    partial void OnID_ConcelhoChanging(int value);
    partial void OnID_ConcelhoChanged();
    #endregion
		
		public Situa_se()
		{
			this._Concelho = default(EntityRef<Concelho>);
			this._Distrito = default(EntityRef<Distrito>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Distrito", DbType="Int NOT NULL")]
		public int ID_Distrito
		{
			get
			{
				return this._ID_Distrito;
			}
			set
			{
				if ((this._ID_Distrito != value))
				{
					if (this._Distrito.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DistritoChanging(value);
					this.SendPropertyChanging();
					this._ID_Distrito = value;
					this.SendPropertyChanged("ID_Distrito");
					this.OnID_DistritoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Concelho", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Concelho
		{
			get
			{
				return this._ID_Concelho;
			}
			set
			{
				if ((this._ID_Concelho != value))
				{
					if (this._Concelho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ConcelhoChanging(value);
					this.SendPropertyChanging();
					this._ID_Concelho = value;
					this.SendPropertyChanged("ID_Concelho");
					this.OnID_ConcelhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Concelho_Situa_se", Storage="_Concelho", ThisKey="ID_Concelho", OtherKey="ID_Concelho", IsForeignKey=true)]
		public Concelho Concelho
		{
			get
			{
				return this._Concelho.Entity;
			}
			set
			{
				Concelho previousValue = this._Concelho.Entity;
				if (((previousValue != value) 
							|| (this._Concelho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Concelho.Entity = null;
						previousValue.Situa_se = null;
					}
					this._Concelho.Entity = value;
					if ((value != null))
					{
						value.Situa_se = this;
						this._ID_Concelho = value.ID_Concelho;
					}
					else
					{
						this._ID_Concelho = default(int);
					}
					this.SendPropertyChanged("Concelho");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Distrito_Situa_se", Storage="_Distrito", ThisKey="ID_Distrito", OtherKey="ID_Distrito", IsForeignKey=true)]
		public Distrito Distrito
		{
			get
			{
				return this._Distrito.Entity;
			}
			set
			{
				Distrito previousValue = this._Distrito.Entity;
				if (((previousValue != value) 
							|| (this._Distrito.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Distrito.Entity = null;
						previousValue.Situa_ses.Remove(this);
					}
					this._Distrito.Entity = value;
					if ((value != null))
					{
						value.Situa_ses.Add(this);
						this._ID_Distrito = value.ID_Distrito;
					}
					else
					{
						this._ID_Distrito = default(int);
					}
					this.SendPropertyChanged("Distrito");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
